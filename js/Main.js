class Main {	constructor(recipes) {		this.data = recipes;		this.dataIngredients = [];		this.dataAppliances = [];		this.dataUstensils = [];		this.selectedKeywords = [];		this.containerKeywords = document.getElementById("containerKeywords");		this.cards = [];		this.containerCards = document.getElementById("containerCards");	}	sortDataForEachButtonsAndCreateThem() {		for(const recipe of recipes) {			for(const ingredient of recipe.ingredients) {				this.dataIngredients.push(ingredient.ingredient.toLowerCase());			}		}		const filteredArrayIngredients = this.dataIngredients.filter((ele, pos) => {    		return this.dataIngredients.indexOf(ele) == pos;		})		this.dataIngredients = filteredArrayIngredients;		const ingredients = new Button("Ingredients", "primary", this.dataIngredients);		ingredients.displayElements();		ingredients.listenClickOnButton();		ingredients.listenInputAndDisplaySortedKeywords();		for(const recipe of recipes) {			this.dataAppliances.push(recipe.appliance.toLowerCase());			}		const filteredArrayAppliances = this.dataAppliances.filter((ele, pos) => {    		return this.dataAppliances.indexOf(ele) == pos;		})		this.dataAppliances = filteredArrayAppliances;		const appliances = new Button("Appliance", "danger", this.dataAppliances);		appliances.displayElements();		appliances.listenClickOnButton();		appliances.listenInputAndDisplaySortedKeywords();		for(const recipe of recipes) {			for(const ustensil of recipe.ustensils) {				this.dataUstensils.push(ustensil.toLowerCase());			}		}		const filteredArrayUstensils = this.dataUstensils.filter((ele, pos) => {    		return this.dataUstensils.indexOf(ele) == pos;		})		this.dataUstensils = filteredArrayUstensils;		const ustensils = new Button("Ustensils", "success", this.dataUstensils);		ustensils.displayElements();		ustensils.listenClickOnButton();		ustensils.listenInputAndDisplaySortedKeywords();	}	createAndDisplayCards() {		for(const recipe of this.data) {			const card = new Card(				recipe.id,				recipe.name,				recipe.ingredients,				recipe.time,				recipe.description,				recipe.appliance,				recipe.ustensils);			this.cards.push(card);		}		this.containerCards.innerHTML = this.cards.map(card => {			return card.render();		}).join('');	}}const main = new Main(recipes);main.sortDataForEachButtonsAndCreateThem();main.createAndDisplayCards();