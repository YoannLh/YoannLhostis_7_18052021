class Main {	constructor(recipes) {		this.data = recipes;		this.dataTitles = [];		this.dataIngredients = [];		this.dataAppliances = [];		this.dataUstensils = [];		this.selectedKeywords = [];		this.containerKeywords = document.getElementById("containerKeywords");		this.cards = [];		this.containerCards = document.getElementById("containerCards");	}	sortDataForEachButtonsAndCreateThem() {		String.prototype.sansAccent = function(){	   		var accent = [		        /[\300-\306]/g, /[\340-\346]/g, // A, a	    	    /[\310-\313]/g, /[\350-\353]/g, // E, e		        /[\314-\317]/g, /[\354-\357]/g, // I, i	    	    /[\322-\330]/g, /[\362-\370]/g, // O, o		        /[\331-\334]/g, /[\371-\374]/g, // U, u	    	    /[\321]/g, /[\361]/g, // N, n		        /[\307]/g, /[\347]/g, // C, c	    	];	    	var noaccent = ['A','a','E','e','I','i','O','o','U','u','N','n','C','c'];	    	var str = this;	    	for(var i = 0; i < accent.length; i++){	        	str = str.replace(accent[i], noaccent[i]);	    	}	    	return str;		}		// clean les titres pour traitement dans input		for(const recipe of this.data) {			this.dataTitles.push(recipe.name.toLowerCase().sansAccent());		}		for(const recipe of this.data) {			for(const ingredient of recipe.ingredients) {				this.dataIngredients.push(ingredient.ingredient.toLowerCase().sansAccent());			}		}		const filteredArrayIngredients = this.dataIngredients.filter((ele, pos) => {    		return this.dataIngredients.indexOf(ele) == pos;		})		this.dataIngredients = filteredArrayIngredients;		const ingredients = new Button("Ingredient", "primary", this.dataIngredients);		ingredients.displayElements(); 		ingredients.listenInputAndDisplaySortedKeywords();		for(const recipe of this.data) {			this.dataAppliances.push(recipe.appliance.toLowerCase().sansAccent());			}		const filteredArrayAppliances = this.dataAppliances.filter((ele, pos) => {    		return this.dataAppliances.indexOf(ele) == pos;		})		this.dataAppliances = filteredArrayAppliances;		const appliances = new Button("Appliance", "danger", this.dataAppliances);		appliances.displayElements();		appliances.listenInputAndDisplaySortedKeywords();		for(const recipe of this.data) {			for(const ustensil of recipe.ustensils) {				this.dataUstensils.push(ustensil.toLowerCase().sansAccent());			}		}		const filteredArrayUstensils = this.dataUstensils.filter((ele, pos) => {    		return this.dataUstensils.indexOf(ele) == pos;		})		this.dataUstensils = filteredArrayUstensils;		const ustensils = new Button("Ustensil", "success", this.dataUstensils);		ustensils.displayElements();		ustensils.listenInputAndDisplaySortedKeywords();	}	createAndDisplayCards() {		for(const recipe of this.data) {			const card = new Card(				recipe.id,				recipe.name,				recipe.ingredients,				recipe.time,				recipe.description,				recipe.appliance,				recipe.ustensils);			this.cards.push(card);		}		this.containerCards.innerHTML = this.cards.map(card => {			return card.render();		}).join('');	}}const main = new Main(recipes);main.sortDataForEachButtonsAndCreateThem();main.createAndDisplayCards();